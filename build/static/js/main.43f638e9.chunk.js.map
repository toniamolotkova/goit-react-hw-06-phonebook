{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Section/Section.js","components/Filter/Filter.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","preventDefault","className","s","form","label","input","type","onChange","pattern","title","required","btn","ContactsList","contacts","onDeleteContact","map","id","item","onClick","Section","children","section","Filter","placeholder","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","contact","shortid","generate","find","toast","warn","prevContacts","length","normalizeFilter","toLowerCase","includes","getFilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43f638e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2O7n3\",\"btn\":\"ContactsList_btn__3aoj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ onSubmit }) {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n \n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n \n    return (\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Phone\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n    )\n\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={s.item}>\n          {name}: {number}\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={s.btn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  )\n}\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={s.input}\n        placeholder=\"Fiona Holmse\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}\nexport default Filter;\n","import  { useState } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Section from './components/Section';\nimport Filter from './components/Filter';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nfunction App() {\n  // state = {\n  //   contacts: [\n  //      { \"id\": \"id-1\", \"name\": \"Rosie Simpson\", \"number\": \"459-12-56\" },\n  //   { \"id\": \"id-2\", \"name\": \"Hermione Kline\", \"number\": \"443-89-12\" },\n  //   { \"id\": \"id-3\", \"name\": \"Eden Clements\", \"number\": \"645-17-79\" },\n  //   { \"id\": \"id-4\", \"name\": \"Annie Copeland\", \"number\": \"227-91-26\" }\n  //   ],\n  //   filter: '',\n  // };\nconst [contacts, setContacts] = useLocalStorage('contacts', [])\n//   const [contacts, setContacts] = useState(() => {\n//    return JSON.parse(window.localStorage.getItem('contacts')) ?? []\n// });\n  const [filter, setFilter] = useState('');\n\n  // componentDidMount() {\n\n  //   const localContacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(localContacts);\n\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n\n  // }\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts))\n  // }, [contacts])\n\n  // componentDidUpdate(prevState) {\n\n  //   const nextContacts = this.state.contacts;\n  //   const prevContacts = prevState.contacts;\n\n  //   if (nextContacts !== prevContacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(nextContacts));\n  //   }\n  // }\n\n\n\n  const addContact = ({ name, number}) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (contacts.find(item => item.name === contact.name)) {\n\n      return toast.warn(`${contact.name} is already in contacts`);\n      //alert(`${contact.name} is already in contacts`);\n   };\n   \n    setContacts(prevContacts => [...prevContacts, contact]); \n  }\n\n  const onDeleteContact = id => {\n    setContacts( contacts.filter(contact => contact.id !== id));\n  };\n\n  const onFilterChange = e => {\n setFilter(e.currentTarget.value)\n  };\n\n  const getFilteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n\n    return (\n      <>\n        <Section>\n          <h1 className=\"title\">Phonebook</h1>\n          <ContactForm onSubmit={addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={onFilterChange} />\n          {contacts.length ? (\n            <ContactsList\n              contacts={ getFilteredContacts()}\n              onDeleteContact={onDeleteContact}\n            />\n          ) : null}\n        </Section>\n         <ToastContainer />\n      </>\n    );\n  \n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}