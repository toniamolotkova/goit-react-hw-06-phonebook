{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/actions.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Section/Section.js","components/Filter/Filter.js","components/Container/Container.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","className","s","form","label","input","type","onChange","pattern","title","required","btn","style","marginLeft","width","height","ContactsList","contacts","useSelector","state","items","normalizeFilter","filter","toLowerCase","item","includes","getFilteredContacts","list","map","onClick","onDeleteContact","Section","children","section","Filter","target","placeholder","Container","container","App","createReducer","actions","find","toast","error","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.900f99f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2O7n3\",\"btn\":\"ContactsList_btn__3aoj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","\nimport shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\n      payload: {\n        id: shortid.generate(),\n      name,\n      number,\n        }\n}))\n\nexport const deleteContact = createAction('contacts/delete');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n","import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/actions';\nimport { TiTickOutline } from 'react-icons/ti';\n\nfunction ContactForm() {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n \n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n \n    return (\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Phone\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n          <TiTickOutline style={{\n            marginLeft: 10, width: 25, height: 25\n          }} />\n        </button>\n      </form>\n    )\n\n}\n\nexport default ContactForm;\n","\nimport { useSelector, useDispatch } from 'react-redux';\nimport React from 'react';\nimport s from './ContactsList.module.css';\nimport { deleteContact } from 'redux/actions';\nimport { TiDeleteOutline } from \"react-icons/ti\";\n\nconst ContactsList = () => {\n\n  const getFilteredContacts = (state) => {\n    const { items, filter } = state.contacts;\n     const normalizeFilter = filter.toLowerCase();\n    return items.filter(item =>\n      item.name.toLowerCase().includes(normalizeFilter),\n    );\n  }\n\n  const contacts = useSelector(state => getFilteredContacts(state));\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  \n\n\n  return (\n    <ul className={ s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={s.item}>\n          <span>{name} </span><span>{number}</span>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={s.btn}\n          >\n            Delete\n            <TiDeleteOutline style={{ marginLeft: 5, width: 15, height: 15}}/>\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\n\nexport default Section;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/actions';\n \nconst Filter = () => {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name: \n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        className={s.input}\n        placeholder=\"Fiona Holmse\"  \n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;","//import  { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Section from './components/Section';\nimport { useSelector } from 'react-redux';\nimport Filter from './components/Filter';\nimport Container from 'components/Container';\n\nfunction App() {\n\n  const contacts = useSelector((state) => state.contacts.items);\n    return (\n      <>\n        <Container>\n          <header>\n             <h1 className=\"title\">Phonebook</h1>\n          </header>\n          <ContactForm />\n        \n        <Section title=\"Contacts\">\n          <Filter /> \n          { contacts && <ContactsList/> }\n        </Section> \n        </Container>\n        \n         <ToastContainer />\n      </>\n    );\n  \n}\n\n\nexport default App;\n","import * as actions from './actions';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst addContactReducer = (state, { payload}) => {\n    if (state.find(item => item.name === payload.name)) {\n        toast.error(`${payload.name} is already in contacts`);\n        return state;\n    } else {\n        return [...state, payload]\n    }\n}\n\nconst items = createReducer([], {\n        [actions.addContact]: addContactReducer,\n    [actions.deleteContact]: (state, { payload}) => state.filter(item => item.id !== payload),\n    })\n\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, {payload}) => payload,\n})\n\nexport default combineReducers({ items, filter });","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\n\nimport reducer from './reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistConfig = {\n  key: 'contacts',\n    storage,\n  blacklist: ['filter'],\n}\n\n\nexport const store = configureStore({\n    reducer: {\n        contacts: persistReducer(persistConfig, reducer),\n    },\n    middleware,\n})\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={ persistor}>\n         <App />\n      </PersistGate>  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}